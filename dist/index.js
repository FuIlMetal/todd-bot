"use strict";var z=Object.create;var C=Object.defineProperty;var F=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var H=Object.getPrototypeOf,$=Object.prototype.hasOwnProperty;var J=(t,r)=>{for(var o in r)C(t,o,{get:r[o],enumerable:!0})},W=(t,r,o,i)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of j(r))!$.call(t,n)&&n!==o&&C(t,n,{get:()=>r[n],enumerable:!(i=F(r,n))||i.enumerable});return t};var S=(t,r,o)=>(o=t!=null?z(H(t)):{},W(r||!t||!t.__esModule?C(o,"default",{value:t,enumerable:!0}):o,t));var a=require("discord.js");var D={};J(D,{data:()=>ne,execute:()=>v});var U=require("discord.js");var E=S(require("dotenv")),b=require("@fightmegg/riot-api");E.default.config();var{DISCORD_TOKEN:A,DISCORD_CLIENT_ID:k,GUILD_ID:O,SUPABASE_URL:P,RIOT_KEY:Q,CHANNEL_ID:K}=process.env,X={debug:!1},Z=new b.RiotAPI(String(Q),X);if(!A||!k||!O||!P||!K)throw new Error("Missing environment variables");var d={DISCORD_TOKEN:A,DISCORD_CLIENT_ID:k,GUILD_ID:O,SUPABASE_URL:P,rAPI:Z,CHANNEL_ID:K};var N=require("@fightmegg/riot-api");var ge=require("dotenv/config"),M=require("drizzle-orm/postgres-js"),L=S(require("postgres")),ee=process.env.SUPABASE_URL,te=(0,L.default)(ee),p=(0,M.drizzle)(te);var e=require("drizzle-orm/pg-core"),h=require("drizzle-orm"),he=(0,e.pgEnum)("aal_level",["aal1","aal2","aal3"]),Ne=(0,e.pgEnum)("code_challenge_method",["s256","plain"]),we=(0,e.pgEnum)("factor_status",["unverified","verified"]),Ie=(0,e.pgEnum)("factor_type",["totp","webauthn"]),Te=(0,e.pgEnum)("one_time_token_type",["confirmation_token","reauthentication_token","recovery_token","email_change_token_new","email_change_token_current","phone_change_token"]),Ce=(0,e.pgEnum)("key_status",["default","valid","invalid","expired"]),xe=(0,e.pgEnum)("key_type",["aead-ietf","aead-det","hmacsha512","hmacsha256","auth","shorthash","generichash","kdf","secretbox","secretstream","stream_xchacha20"]),ve=(0,e.pgEnum)("action",["INSERT","UPDATE","DELETE","TRUNCATE","ERROR"]),De=(0,e.pgEnum)("equality_op",["eq","neq","lt","lte","gt","gte","in"]),Re=(0,e.pgTable)("accounts",{id:(0,e.serial)("id").primaryKey().notNull(),riot_puuid:(0,e.char)("riot_puuid",{length:78}).notNull(),player_id:(0,e.integer)("player_id").notNull().references(()=>x.id),is_primary:(0,e.boolean)("is_primary").notNull()}),m=(0,e.pgTable)("divisions",{id:(0,e.serial)("id").primaryKey().notNull(),name:(0,e.varchar)("name",{length:20}),description:(0,e.text)("description"),provider_id:(0,e.integer)("provider_id").notNull(),tournament_id:(0,e.integer)("tournament_id").notNull(),groups:(0,e.integer)("groups")},t=>({lower_idx:(0,e.index)("divisions_lower_idx").using("btree",h.sql`lower((name)::text)`)})),Se=(0,e.pgTable)("performances",{id:(0,e.serial)("id").primaryKey().notNull(),player_id:(0,e.integer)("player_id").references(()=>x.id),team_id:(0,e.integer)("team_id").references(()=>s.id),game_id:(0,e.integer)("game_id").references(()=>u.id)}),x=(0,e.pgTable)("players",{id:(0,e.serial)("id").primaryKey().notNull(),primary_riot_puuid:(0,e.char)("primary_riot_puuid",{length:78}).notNull(),team_id:(0,e.integer)("team_id").references(()=>s.id)}),Ee=(0,e.pgTable)("schedules",{id:(0,e.serial)("id").primaryKey().notNull(),week:(0,e.integer)("week").notNull(),division_id:(0,e.integer)("division_id").notNull().references(()=>m.id),group_id:(0,e.char)("group_id",{length:1}).notNull(),series_id:(0,e.integer)("series_id").notNull().references(()=>c.id)}),oe=(0,e.pgTable)("results",{id:(0,e.serial)("id").primaryKey().notNull(),start_time:(0,e.bigint)("start_time",{mode:"number"}),short_code:(0,e.varchar)("short_code",{length:100}).notNull(),meta_data:(0,e.text)("meta_data").notNull(),game_id:(0,e.integer)("game_id"),game_name:(0,e.varchar)("game_name",{length:60}),game_type:(0,e.varchar)("game_type",{length:20}),game_map:(0,e.varchar)("game_map",{length:20}),game_mode:(0,e.varchar)("game_mode",{length:20}),region:(0,e.varchar)("region",{length:20})}),c=(0,e.pgTable)("series",{id:(0,e.serial)("id").primaryKey().notNull(),team1_id:(0,e.integer)("team1_id").notNull().references(()=>s.id),team2_id:(0,e.integer)("team2_id").notNull().references(()=>s.id),message_id:(0,e.bigint)("message_id",{mode:"number"}),playoffs:(0,e.boolean)("playoffs").notNull(),win_condition:(0,e.integer)("win_condition").notNull()}),u=(0,e.pgTable)("games",{id:(0,e.serial)("id").primaryKey().notNull(),short_code:(0,e.varchar)("short_code",{length:100}).notNull(),winner_id:(0,e.integer)("winner_id").references(()=>s.id),loser_id:(0,e.integer)("loser_id").references(()=>s.id),series_id:(0,e.integer)("series_id").notNull().references(()=>c.id),result_id:(0,e.integer)("result_id").references(()=>oe.id),game_num:(0,e.integer)("game_num").default(0).notNull()}),be=(0,e.pgTable)("standings",{id:(0,e.serial)("id").primaryKey().notNull(),placement:(0,e.integer)("placement").notNull(),division_id:(0,e.integer)("division_id").notNull(),group_id:(0,e.char)("group_id",{length:1}).notNull(),team_id:(0,e.integer)("team_id").notNull().references(()=>s.id)}),s=(0,e.pgTable)("teams",{id:(0,e.serial)("id").primaryKey().notNull(),name:(0,e.varchar)("name",{length:255}).notNull(),division_id:(0,e.integer)("division_id").notNull().references(()=>m.id),group_id:(0,e.char)("group_id",{length:1}).notNull(),captain_id:(0,e.integer)("captain_id").references(()=>x.id),logo:(0,e.varchar)("logo")},t=>({lower_idx:(0,e.index)("teams_lower_idx").using("btree",h.sql`lower((name)::text)`)})),Ae=(0,e.pgTable)("group_keys",{id:(0,e.smallint)("id").primaryKey().notNull(),letter:(0,e.char)("letter",{length:1})},t=>({lower_idx:(0,e.index)("group_keys_lower_idx").using("btree",h.sql`lower((letter)::text)`)}));var _=require("drizzle-orm"),g=require("drizzle-orm"),ne=new U.SlashCommandBuilder().setName("generate-tournament-code").setDescription("Generate Tournament Code");async function B(t){return(await p.select().from(s).where(_.sql`lower(${s.name}) = lower(${t})`))[0]}async function re(t,r){let o="",i=await B(t),n=await B(r);return i==null?(o="Are you sure "+t+" is a real team?",{data:{team1:null,team2:null,error:o}}):n==null?(o="Are you sure "+r+" is a real team?",{data:{team1:null,team2:null,error:o}}):i.id==n.id?(o="Yeah I'm not really sure what to tell you chief. You're not better than yourself",{data:{team1:null,team2:null,error:o}}):i.division_id==n.division_id&&i.group_id==n.group_id?{data:{team1:i,team2:n,error:o}}:(o="Silly Goose, these teams can't play against each other!",{data:{team1:null,team2:null,error:o}})}async function ie(t,r){let{first:o,second:i}=t.id>r.id?{first:t.id,second:r.id}:{first:r.id,second:t.id};return await p.select({seriesId:c.id}).from(c).where((0,_.and)((0,g.eq)(c.team1_id,o),(0,g.eq)(c.team2_id,i)))}async function v(t,r){let o="",i="",n=1,l=await re(t,r);if(l?.data.error!="")return o=l?.data.error,{tournamentCode1:i,game_number:n,error:o};let V=(await p.select({providerId:m.provider_id,tournamentId:m.tournament_id}).from(m).where((0,g.eq)(m.id,l.data.team1.division_id)))[0].tournamentId,R=await ie(l.data.team1,l.data.team2);if(R[0]==null)return o="There is no series for those two teams.",{tournamentCode1:i,game_number:n,error:o};let I=R[0].seriesId,T=await p.select({gameNum:u.game_num}).from(u).where((0,g.eq)(u.series_id,I)).orderBy((0,_.desc)(u.game_num));if(T!=null&&T[0]!=null&&(n=T[0].gameNum+1),n>10)return o="We do not allow more than 10 codes for a single series. Please make a ticket if you are having issues with your tournament codes.",{tournamentCode1:i,game_number:n,error:o};let Y=JSON.stringify({game_num:n,series_id:I});return i=(await d.rAPI.tournamentV5.createCodes({params:{count:1,tournamentId:V},body:{teamSize:5,pickType:N.RiotAPITypes.TournamentV5.PICKTYPE.TOURNAMENT_DRAFT,mapType:N.RiotAPITypes.TournamentV5.MAPTYPE.SUMMONERS_RIFT,spectatorType:N.RiotAPITypes.TournamentV5.SPECTATORTYPE.ALL,enoughPlayers:!1,metadata:Y}}))[0],await p.insert(u).values({short_code:i[0],series_id:I,game_num:n}),{tournamentCode1:i,game_number:n,error:o}}var w={tournament:D};var f=require("discord.js");var ae=Object.values(w).map(t=>t.data),G=new f.REST({version:"10"}).setToken(d.DISCORD_TOKEN);async function q({guildId:t}){try{console.log("Started refreshing application (/) commands."),await G.put(f.Routes.applicationGuildCommands(d.DISCORD_CLIENT_ID,t),{body:[]}).then(()=>console.log("Successfully deleted all guild commands.")).catch(console.error),await G.put(f.Routes.applicationCommands(d.DISCORD_CLIENT_ID),{body:ae}),console.log("Successfully reloaded application (/) commands.")}catch(r){console.error(r)}}var y=new a.Client({intents:["Guilds","GuildMessages","DirectMessages"]}),Qe=Object.values(w).map(t=>t.data),Xe=new a.REST({version:"10"}).setToken(d.DISCORD_TOKEN),Ze=process.env.DISCORD_TOKEN,et=process.env.PROVIDER_ID,se=process.env.GUILD_ID,tt=process.env.TOURNAMENT_ID,ot=process.env.TOURNAMENT_CODE_ENDPOIN,de=process.env.CHANNEL_ID;y.once("ready",async()=>{console.log("Discord bot is ready! \u{1F916}"),await q({guildId:se})});y.on("guildCreate",async t=>{console.log("deploy commands please")});y.on(a.Events.InteractionCreate,async t=>{if(t.isChatInputCommand())if(t.commandName=="generate-tournament-code"&&t.channelId==de){let r=new a.ModalBuilder().setCustomId("generate-tournament-code").setTitle("Tournament Codes"),o=new a.TextInputBuilder().setCustomId("team1").setLabel("First team input").setStyle(a.TextInputStyle.Short),i=new a.TextInputBuilder().setCustomId("team2").setLabel("Second team input").setStyle(a.TextInputStyle.Short),n=new a.ActionRowBuilder().addComponents(o),l=new a.ActionRowBuilder().addComponents(i);r.addComponents(n,l),await t.showModal(r)}else t.reply({content:"Please do not use this command in this way <3",ephemeral:!0})});y.on(a.Events.InteractionCreate,async t=>{if(!t.isModalSubmit())return;let r=t.fields.getTextInputValue("team1"),o=t.fields.getTextInputValue("team2");var i;try{i=await v(r,o)}catch{t.reply({content:"Error, contact ruuffian.",ephemeral:!0});return}if(i?.error!="")t.reply({content:i?.error,ephemeral:!0});else{let n="```The "+i?.game_number+" Code for your series is "+i?.tournamentCode1;n=i?.game_number>5?n.concat(". You are above the needed codes for your series. If you are experiencing issues, please open an admit ticket.```<@247886805821685761>"):n.concat("```"),t.reply({content:n})}});y.login(d.DISCORD_TOKEN);
