"use strict";var z=Object.create;var C=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var H=Object.getPrototypeOf,J=Object.prototype.hasOwnProperty;var E=(t,o)=>{for(var n in o)C(t,n,{get:o[n],enumerable:!0})},Q=(t,o,n,r)=>{if(o&&typeof o=="object"||typeof o=="function")for(let s of j(o))!J.call(t,s)&&s!==n&&C(t,s,{get:()=>o[s],enumerable:!(r=$(o,s))||r.enumerable});return t};var P=(t,o,n)=>(n=t!=null?z(H(t)):{},Q(o||!t||!t.__esModule?C(n,"default",{value:t,enumerable:!0}):n,t));var i=require("discord.js");var S={};E(S,{data:()=>oe,execute:()=>R});var q=require("discord.js");var b=P(require("dotenv")),D=require("@fightmegg/riot-api");b.default.config();var{DISCORD_TOKEN:O,DISCORD_CLIENT_ID:k,GUILD_ID:M,SUPABASE_URL:K,SUPABASE_KEY:U,RIOT_KEY:W}=process.env,X={debug:!1},B=new D.RiotAPI(String(W),X);console.log(B.account);if(!O||!k||!M||!K||!U)throw new Error("Missing environment variables");var d={DISCORD_TOKEN:O,DISCORD_CLIENT_ID:k,GUILD_ID:M,SUPABASE_URL:K,SUPABASE_KEY:U,rAPI:B};var I=require("@fightmegg/riot-api");var ce=require("dotenv/config"),V=require("drizzle-orm/postgres-js"),L=P(require("postgres")),Z=process.env.SUPABASE_URL,ee=(0,L.default)(Z),u=(0,V.drizzle)(ee);var e=require("drizzle-orm/pg-core"),h=require("drizzle-orm"),_e=(0,e.pgEnum)("aal_level",["aal1","aal2","aal3"]),ge=(0,e.pgEnum)("code_challenge_method",["s256","plain"]),fe=(0,e.pgEnum)("factor_status",["unverified","verified"]),ye=(0,e.pgEnum)("factor_type",["totp","webauthn"]),Te=(0,e.pgEnum)("one_time_token_type",["confirmation_token","reauthentication_token","recovery_token","email_change_token_new","email_change_token_current","phone_change_token"]),he=(0,e.pgEnum)("key_status",["default","valid","invalid","expired"]),Ie=(0,e.pgEnum)("key_type",["aead-ietf","aead-det","hmacsha512","hmacsha256","auth","shorthash","generichash","kdf","secretbox","secretstream","stream_xchacha20"]),Ne=(0,e.pgEnum)("action",["INSERT","UPDATE","DELETE","TRUNCATE","ERROR"]),we=(0,e.pgEnum)("equality_op",["eq","neq","lt","lte","gt","gte","in"]),te=(0,e.pgTable)("results",{id:(0,e.serial)("id").primaryKey().notNull(),start_time:(0,e.bigint)("start_time",{mode:"number"}),short_code:(0,e.char)("short_code",{length:44}).notNull(),meta_data:(0,e.text)("meta_data").notNull(),game_id:(0,e.integer)("game_id"),game_name:(0,e.varchar)("game_name",{length:60}),game_type:(0,e.varchar)("game_type",{length:20}),game_map:(0,e.varchar)("game_map",{length:20}),game_mode:(0,e.varchar)("game_mode",{length:20}),region:(0,e.varchar)("region",{length:20})}),xe=(0,e.pgTable)("accounts",{id:(0,e.serial)("id").primaryKey().notNull(),riot_puuid:(0,e.char)("riot_puuid",{length:78}).notNull(),player_id:(0,e.integer)("player_id").notNull().references(()=>v.id),is_primary:(0,e.boolean)("is_primary").notNull()}),l=(0,e.pgTable)("divisions",{id:(0,e.serial)("id").primaryKey().notNull(),name:(0,e.varchar)("name",{length:20}),description:(0,e.text)("description"),provider_id:(0,e.integer)("provider_id").notNull(),tournament_id:(0,e.integer)("tournament_id").notNull(),groups:(0,e.integer)("groups")},t=>({lower_idx:(0,e.index)("divisions_lower_idx").using("btree",h.sql`lower((name)::text)`)})),m=(0,e.pgTable)("games",{id:(0,e.serial)("id").primaryKey().notNull(),short_code:(0,e.char)("short_code",{length:44}).notNull(),winner_id:(0,e.integer)("winner_id").references(()=>a.id),loser_id:(0,e.integer)("loser_id").references(()=>a.id),series_id:(0,e.integer)("series_id").notNull().references(()=>c.id),result_id:(0,e.integer)("result_id").references(()=>te.id),game_num:(0,e.integer)("game_num")}),Ce=(0,e.pgTable)("performances",{id:(0,e.serial)("id").primaryKey().notNull(),player_id:(0,e.integer)("player_id").references(()=>v.id),team_id:(0,e.integer)("team_id").references(()=>a.id),game_id:(0,e.integer)("game_id").references(()=>m.id)}),v=(0,e.pgTable)("players",{id:(0,e.serial)("id").primaryKey().notNull(),primary_riot_puuid:(0,e.char)("primary_riot_puuid",{length:78}).notNull(),team_id:(0,e.integer)("team_id").references(()=>a.id)}),ve=(0,e.pgTable)("schedules",{id:(0,e.serial)("id").primaryKey().notNull(),week:(0,e.integer)("week").notNull(),division_id:(0,e.integer)("division_id").notNull().references(()=>l.id),group_id:(0,e.char)("group_id",{length:1}).notNull(),series_id:(0,e.integer)("series_id").notNull().references(()=>c.id)}),c=(0,e.pgTable)("series",{id:(0,e.serial)("id").primaryKey().notNull(),team1_id:(0,e.integer)("team1_id").notNull().references(()=>a.id),team2_id:(0,e.integer)("team2_id").notNull().references(()=>a.id),message_id:(0,e.bigint)("message_id",{mode:"number"}),playoffs:(0,e.boolean)("playoffs").notNull(),win_condition:(0,e.integer)("win_condition").notNull()}),Re=(0,e.pgTable)("standings",{id:(0,e.serial)("id").primaryKey().notNull(),placement:(0,e.integer)("placement").notNull(),division_id:(0,e.integer)("division_id").notNull(),group_id:(0,e.char)("group_id",{length:1}).notNull(),team_id:(0,e.integer)("team_id").notNull().references(()=>a.id)}),a=(0,e.pgTable)("teams",{id:(0,e.serial)("id").primaryKey().notNull(),name:(0,e.varchar)("name",{length:255}).notNull(),division_id:(0,e.integer)("division_id").notNull().references(()=>l.id),group_id:(0,e.char)("group_id",{length:1}).notNull(),captain_id:(0,e.integer)("captain_id").references(()=>v.id),logo:(0,e.varchar)("logo")},t=>({lower_idx:(0,e.index)("teams_lower_idx").using("btree",h.sql`lower((name)::text)`)})),Se=(0,e.pgTable)("group_keys",{id:(0,e.smallint)("id").primaryKey().notNull(),letter:(0,e.char)("letter",{length:1})},t=>({lower_idx:(0,e.index)("group_keys_lower_idx").using("btree",h.sql`lower((letter)::text)`)}));var p=require("drizzle-orm"),_=require("drizzle-orm"),oe=new q.ModalBuilder().setCustomId("genertate-tournament-code").setTitle("Tournament Codes");async function Y(t){return(await u.select().from(a).where(p.sql`lower(${a.name}) = lower(${t})`))[0]}async function ne(t,o){let n=await Y(t),r=await Y(o);return n==null||r==null?null:n.division_id==r.division_id&&n.group_id==r.group_id?{data:{team1Data:n,team2Data:r}}:null}async function re(t,o){let{first:n,second:r}=t.id>o.id?{first:t.id,second:o.id}:{first:o.id,second:t.id};return(await u.select({seriesId:c.id}).from(c).where((0,p.and)((0,_.eq)(c.team1_id,n),(0,_.eq)(c.team2_id,r))))[0]}async function R(t,o){let n=await ne(t,o);if(n?.data.team1Data==null)return null;let r=await u.select({providerId:l.provider_id,tournamentId:l.tournament_id}).from(l).where((0,_.eq)(l.id,n.data.team1Data.division_id)),s=r[0].providerId,N=r[0].tournamentId,w=(await re(n.data.team1Data,n.data.team2Data)).seriesId,y=await u.select({gameNum:m.game_num}).from(m).where((0,_.eq)(m.series_id,w)).orderBy((0,p.desc)(m.game_num)),T=0;console.log(y),y!=null&&y[0]!=null&&(T=y[0].gameNum+1);let x=await d.rAPI.tournamentStubV5.createCodes({params:{count:1,tournamentId:N},body:{teamSize:5,pickType:I.RiotAPITypes.TournamentV5.PICKTYPE.TOURNAMENT_DRAFT,mapType:I.RiotAPITypes.TournamentV5.MAPTYPE.SUMMONERS_RIFT,spectatorType:I.RiotAPITypes.TournamentV5.SPECTATORTYPE.ALL,enoughPlayers:!1,metadata:"game_num: "+T+", series_id:"+w}});return console.log(x[0]),await u.insert(m).values({short_code:x[0],series_id:w,game_num:T}),{tournamentCode1:x,game_number:T}}var A={};E(A,{data:()=>ie,execute:()=>ae});var G=require("discord.js");var g=require("@fightmegg/riot-api"),ie=new G.SlashCommandBuilder().setName("ping").setDescription("Replies with Pong!");async function ae(t){console.log("here");let o=await d.rAPI.tournamentStubV5.createProvider({body:{region:g.RiotAPITypes.TournamentV5.REGION.NA,url:""}});console.log(o);let n=await d.rAPI.tournamentStubV5.createTournament({body:{providerId:o}});console.log(String(n));let r=await d.rAPI.tournamentStubV5.createCodes({params:{count:1,tournamentId:n},body:{teamSize:5,pickType:g.RiotAPITypes.TournamentV5.PICKTYPE.TOURNAMENT_DRAFT,mapType:g.RiotAPITypes.TournamentV5.MAPTYPE.SUMMONERS_RIFT,spectatorType:g.RiotAPITypes.TournamentV5.SPECTATORTYPE.ALL,enoughPlayers:!0}});return console.log(r),t.reply(String(r.pop()))}var F={tournament:S,ping:A};var f=new i.Client({intents:["Guilds","GuildMessages","DirectMessages"]}),$e=Object.values(F).map(t=>t.data),je=new i.REST({version:"10"}).setToken(d.DISCORD_TOKEN),He=process.env.DISCORD_TOKEN,Je=process.env.PROVIDER_ID,Qe=process.env.GUILD_ID,We=process.env.TOURNAMENT_ID,Xe=process.env.TOURNAMENT_CODE_ENDPOIN;f.once("ready",async()=>{console.log("Discord bot is ready! \u{1F916}")});f.on("guildCreate",async t=>{console.log("deploy commands please")});f.on(i.Events.InteractionCreate,async t=>{if(t.isChatInputCommand()&&t.commandName==="genertate-tournament-code"){console.log(t.guildId);let o=new i.ModalBuilder().setCustomId("genertate-tournament-code").setTitle("Tournament Codes"),n=new i.TextInputBuilder().setCustomId("team1").setLabel("First team input").setStyle(i.TextInputStyle.Short),r=new i.TextInputBuilder().setCustomId("team2").setLabel("Second team input").setStyle(i.TextInputStyle.Short),s=new i.ActionRowBuilder().addComponents(n),N=new i.ActionRowBuilder().addComponents(r);o.addComponents(s,N),await t.showModal(o)}});f.on(i.Events.InteractionCreate,async t=>{if(console.log(t.guildId),!!t.isModalSubmit()){let n=t.fields.getTextInputValue("team1"),r=t.fields.getTextInputValue("team2");var o=await R(n,r);t.reply({content:"The "+(o?.game_number+1)+" Code for your series is ```"+o?.tournamentCode1+"```"})}});f.login(d.DISCORD_TOKEN);
