"use strict";var W=Object.create;var E=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var J=Object.getOwnPropertyNames;var X=Object.getPrototypeOf,Q=Object.prototype.hasOwnProperty;var Z=(t,r)=>{for(var n in r)E(t,n,{get:r[n],enumerable:!0})},ee=(t,r,n,a)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of J(r))!Q.call(t,o)&&o!==n&&E(t,o,{get:()=>r[o],enumerable:!(a=$(r,o))||a.enumerable});return t};var O=(t,r,n)=>(n=t!=null?W(X(t)):{},ee(r||!t||!t.__esModule?E(n,"default",{value:t,enumerable:!0}):n,t));var i=require("discord.js");var A={};Z(A,{data:()=>se,execute:()=>S});var q=require("discord.js");var P=O(require("dotenv")),k=require("@fightmegg/riot-api");P.default.config();var{DISCORD_TOKEN:M,DISCORD_CLIENT_ID:K,GUILD_ID:L,SUPABASE_URL:U,RIOT_KEY:te,CHANNEL_ID:B}=process.env,oe={debug:!1},ne=new k.RiotAPI(String(te),oe);if(!M||!K||!L||!U||!B)throw new Error("Missing environment variables");var u={DISCORD_TOKEN:M,DISCORD_CLIENT_ID:K,GUILD_ID:L,SUPABASE_URL:U,rAPI:ne,CHANNEL_ID:B};var T=require("@fightmegg/riot-api");var we=require("dotenv/config"),G=require("drizzle-orm/postgres-js"),Y=O(require("postgres")),re=process.env.SUPABASE_URL,ae=(0,Y.default)(re),y=(0,G.drizzle)(ae);var e=require("drizzle-orm/pg-core"),C=require("drizzle-orm"),Ce=(0,e.pgEnum)("aal_level",["aal1","aal2","aal3"]),Te=(0,e.pgEnum)("code_challenge_method",["s256","plain"]),ve=(0,e.pgEnum)("factor_status",["unverified","verified"]),xe=(0,e.pgEnum)("factor_type",["totp","webauthn"]),Re=(0,e.pgEnum)("one_time_token_type",["confirmation_token","reauthentication_token","recovery_token","email_change_token_new","email_change_token_current","phone_change_token"]),Ee=(0,e.pgEnum)("key_status",["default","valid","invalid","expired"]),De=(0,e.pgEnum)("key_type",["aead-ietf","aead-det","hmacsha512","hmacsha256","auth","shorthash","generichash","kdf","secretbox","secretstream","stream_xchacha20"]),Se=(0,e.pgEnum)("action",["INSERT","UPDATE","DELETE","TRUNCATE","ERROR"]),Ae=(0,e.pgEnum)("equality_op",["eq","neq","lt","lte","gt","gte","in"]),be=(0,e.pgTable)("accounts",{id:(0,e.serial)("id").primaryKey().notNull(),riot_puuid:(0,e.char)("riot_puuid",{length:78}).notNull(),player_id:(0,e.integer)("player_id").notNull().references(()=>D.id),is_primary:(0,e.boolean)("is_primary").notNull()}),p=(0,e.pgTable)("divisions",{id:(0,e.serial)("id").primaryKey().notNull(),name:(0,e.varchar)("name",{length:20}),description:(0,e.text)("description"),provider_id:(0,e.integer)("provider_id").notNull(),tournament_id:(0,e.integer)("tournament_id").notNull(),groups:(0,e.integer)("groups")},t=>({lower_idx:(0,e.index)("divisions_lower_idx").using("btree",C.sql`lower((name)::text)`)})),Oe=(0,e.pgTable)("performances",{id:(0,e.serial)("id").primaryKey().notNull(),player_id:(0,e.integer)("player_id").references(()=>D.id),team_id:(0,e.integer)("team_id").references(()=>d.id),game_id:(0,e.integer)("game_id").references(()=>g.id)}),D=(0,e.pgTable)("players",{id:(0,e.serial)("id").primaryKey().notNull(),primary_riot_puuid:(0,e.char)("primary_riot_puuid",{length:78}).notNull(),team_id:(0,e.integer)("team_id").references(()=>d.id)}),Pe=(0,e.pgTable)("schedules",{id:(0,e.serial)("id").primaryKey().notNull(),week:(0,e.integer)("week").notNull(),division_id:(0,e.integer)("division_id").notNull().references(()=>p.id),group_id:(0,e.char)("group_id",{length:1}).notNull(),series_id:(0,e.integer)("series_id").notNull().references(()=>_.id)}),ie=(0,e.pgTable)("results",{id:(0,e.serial)("id").primaryKey().notNull(),start_time:(0,e.bigint)("start_time",{mode:"number"}),short_code:(0,e.varchar)("short_code",{length:100}).notNull(),meta_data:(0,e.text)("meta_data").notNull(),game_id:(0,e.integer)("game_id"),game_name:(0,e.varchar)("game_name",{length:60}),game_type:(0,e.varchar)("game_type",{length:20}),game_map:(0,e.varchar)("game_map",{length:20}),game_mode:(0,e.varchar)("game_mode",{length:20}),region:(0,e.varchar)("region",{length:20})}),_=(0,e.pgTable)("series",{id:(0,e.serial)("id").primaryKey().notNull(),team1_id:(0,e.integer)("team1_id").notNull().references(()=>d.id),team2_id:(0,e.integer)("team2_id").notNull().references(()=>d.id),message_id:(0,e.bigint)("message_id",{mode:"number"}),playoffs:(0,e.boolean)("playoffs").notNull(),win_condition:(0,e.integer)("win_condition").notNull()}),g=(0,e.pgTable)("games",{id:(0,e.serial)("id").primaryKey().notNull(),short_code:(0,e.varchar)("short_code",{length:100}).notNull(),winner_id:(0,e.integer)("winner_id").references(()=>d.id),loser_id:(0,e.integer)("loser_id").references(()=>d.id),series_id:(0,e.integer)("series_id").notNull().references(()=>_.id),result_id:(0,e.integer)("result_id").references(()=>ie.id),game_num:(0,e.integer)("game_num").default(0).notNull()}),ke=(0,e.pgTable)("standings",{id:(0,e.serial)("id").primaryKey().notNull(),placement:(0,e.integer)("placement").notNull(),division_id:(0,e.integer)("division_id").notNull(),group_id:(0,e.char)("group_id",{length:1}).notNull(),team_id:(0,e.integer)("team_id").notNull().references(()=>d.id)}),d=(0,e.pgTable)("teams",{id:(0,e.serial)("id").primaryKey().notNull(),name:(0,e.varchar)("name",{length:255}).notNull(),division_id:(0,e.integer)("division_id").notNull().references(()=>p.id),group_id:(0,e.char)("group_id",{length:1}).notNull(),captain_id:(0,e.integer)("captain_id").references(()=>D.id),logo:(0,e.varchar)("logo")},t=>({lower_idx:(0,e.index)("teams_lower_idx").using("btree",C.sql`lower((name)::text)`)})),Me=(0,e.pgTable)("group_keys",{id:(0,e.smallint)("id").primaryKey().notNull(),letter:(0,e.char)("letter",{length:1})},t=>({lower_idx:(0,e.index)("group_keys_lower_idx").using("btree",C.sql`lower((letter)::text)`)}));var f=require("drizzle-orm"),N=require("drizzle-orm"),se=new q.SlashCommandBuilder().setName("generate-tournament-code").setDescription("Generate Tournament Code");async function V(t){return(await y.select().from(d).where(f.sql`lower(${d.name}) = lower(${t})`))[0]}async function de(t,r){let n="",a=await V(t),o=await V(r);return a==null?(n="Are you sure "+t+" is a real team?",{data:{team1:null,team2:null,error:n}}):o==null?(n="Are you sure "+r+" is a real team?",{data:{team1:null,team2:null,error:n}}):a.id==o.id?(n="Yeah I'm not really sure what to tell you chief. You're not better than yourself",{data:{team1:null,team2:null,error:n}}):a.division_id==o.division_id&&a.group_id==o.group_id?{data:{team1:a,team2:o,error:n}}:(n="Silly Goose, these teams can't play against each other!",{data:{team1:null,team2:null,error:n}})}async function le(t,r){let{first:n,second:a}=t.id>r.id?{first:t.id,second:r.id}:{first:r.id,second:t.id};return await y.select({seriesId:_.id}).from(_).where((0,f.and)((0,N.eq)(_.team1_id,n),(0,N.eq)(_.team2_id,a)))}async function S(t,r){let n="",a="",o=1,s=0,c="",l="",w="",m=await de(t,r);if(m?.data.error!="")return n=m?.data.error,{tournamentCode1:a,game_number:o,error:n,division:s,group:c,team1Name:l,team2Name:w};l=m.data.team1.name,w=m.data.team2.name;let H=(await y.select({providerId:p.provider_id,tournamentId:p.tournament_id}).from(p).where((0,N.eq)(p.id,m.data.team1.division_id)))[0].tournamentId,b=await le(m.data.team1,m.data.team2);if(b[0]==null)return n="There is no series for those two teams.",{tournamentCode1:a,game_number:o,error:n,division:s,group:c,team1Name:l,team2Name:w};let x=b[0].seriesId,R=await y.select({gameNum:g.game_num}).from(g).where((0,N.eq)(g.series_id,x)).orderBy((0,f.desc)(g.game_num));if(R!=null&&R[0]!=null&&(o=R[0].gameNum+1),o>10)return n="We do not allow more than 10 codes for a single series. Please make a ticket if you are having issues with your tournament codes.",{tournamentCode1:a,game_number:o,error:n,division:s,group:c,team1Name:l,team2Name:w};let j=JSON.stringify({gameNum:o,seriesId:x});return a=(await u.rAPI.tournamentV5.createCodes({params:{count:1,tournamentId:H},body:{teamSize:5,pickType:T.RiotAPITypes.TournamentV5.PICKTYPE.TOURNAMENT_DRAFT,mapType:T.RiotAPITypes.TournamentV5.MAPTYPE.SUMMONERS_RIFT,spectatorType:T.RiotAPITypes.TournamentV5.SPECTATORTYPE.ALL,enoughPlayers:!1,metadata:j}}))[0],await y.insert(g).values({short_code:a,series_id:x,game_num:o}),s=m.data.team1.division_id,c=m.data.team1.group_id,{tournamentCode1:a,game_number:o,error:n,division:s,group:c,team1Name:l,team2Name:w}}var v={tournament:A};var I=require("discord.js");var me=Object.values(v).map(t=>t.data),F=new I.REST({version:"10"}).setToken(u.DISCORD_TOKEN);async function z({guildId:t}){try{console.log("Started refreshing application (/) commands."),await F.put(I.Routes.applicationGuildCommands(u.DISCORD_CLIENT_ID,t),{body:[]}).then(()=>console.log("Successfully deleted all guild commands.")).catch(console.error),await F.put(I.Routes.applicationCommands(u.DISCORD_CLIENT_ID),{body:me}),console.log("Successfully reloaded application (/) commands.")}catch(r){console.error(r)}}var h=new i.Client({intents:[i.GatewayIntentBits.Guilds,"Guilds","GuildMessages","DirectMessages"],presence:{activities:[{name:"Week 1 HYPE!!",type:i.ActivityType.Streaming}],status:"online"}}),ot=Object.values(v).map(t=>t.data),nt=new i.REST({version:"10"}).setToken(u.DISCORD_TOKEN),rt=process.env.DISCORD_TOKEN,at=process.env.PROVIDER_ID,ue=process.env.GUILD_ID,it=process.env.TOURNAMENT_ID,st=process.env.TOURNAMENT_CODE_ENDPOIN,ce=process.env.CHANNEL_ID;h.once("ready",async()=>{console.log("Discord bot is ready! \u{1F916}"),h.user?.setPresence({status:"online"}),await z({guildId:ue})});h.on("guildCreate",async t=>{console.log("deploy commands please")});h.on(i.Events.InteractionCreate,async t=>{if(t.isChatInputCommand())if(t.commandName=="generate-tournament-code"&&t.channelId==ce){let r=new i.ModalBuilder().setCustomId("generate-tournament-code").setTitle("Tournament Codes"),n=new i.TextInputBuilder().setCustomId("team1").setLabel("First team input").setStyle(i.TextInputStyle.Short),a=new i.TextInputBuilder().setCustomId("team2").setLabel("Second team input").setStyle(i.TextInputStyle.Short),o=new i.ActionRowBuilder().addComponents(n),s=new i.ActionRowBuilder().addComponents(a);r.addComponents(o,s),await t.showModal(r)}else t.reply({content:"Please do not use this command in this way <3",ephemeral:!0})});h.on(i.Events.InteractionCreate,async t=>{if(!t.isModalSubmit())return;await t.deferReply();let r=t.fields.getTextInputValue("team1"),n=t.fields.getTextInputValue("team2"),a=new Map;a.set(1,"ECONOMY"),a.set(2,"COMMERCIAL"),a.set(3,"FINANCIAL"),a.set(4,"EXECUTIVE"),a.set(5,"TEST");var o;try{o=await S(r,n)}catch{await t.editReply("Error"),await t.followUp({content:"Error, contact ruuffian.",ephemeral:!0}),await t.deleteReply();return}if(o?.error!="")await t.editReply("Error"),await t.followUp({content:o?.error,ephemeral:!0}),await t.deleteReply();else{let s=a.get(o?.division),c=o?.group,l="## "+s+" - Group "+c+`
**__`+o.team1Name+"__** vs **__"+o.team2Name+`__**
Game `+o?.game_number+" Code: ```"+o?.tournamentCode1+"```";o?.game_number>5&&(l=l.concat(`
You are above the needed codes for your series. If you are experiencing issues, please open an admit ticket. <@247886805821685761>`)),await t.editReply(l)}});h.login(u.DISCORD_TOKEN);
